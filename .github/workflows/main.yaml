# Your workflow name.
name: Deploy to heroku.

# Run workflow on every push to main branch.
on:
  push:
    branches: [master]
  workflow_dispatch:
    

# Your workflows jobs.
jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  Test-Local:
    runs-on: ubuntu-latest
    environment:
      name: Development
    needs: [Build]
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test application
      run: |
        FLASK_ENV=${{secrets.FLASK_ENV}} waitress-serve --listen=127.0.0.1:5000 app:app &
        sleep 10
        curl http://127.0.0.1:5000/

  DeployDev:
    name: Deploy to Dev
    needs: [Test-Local]
    runs-on: ubuntu-latest
    environment:
      name: Development
      # url: 'https://${{secrets.HEROKU_APP_NAME}}-dev.herokuapp.com/'
    steps:
      # Check-out your repository.
      - name: Checkout
        uses: actions/checkout@v2


### ⬇ IMPORTANT PART ⬇ ###

      - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
        uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          dockerfile_directory: ./
          dockerfile_name: Dockerfile
          docker_options: "--no-cache"
          process_type: web

  Test-Remote:
    name: Test Remote Deployment
    needs: [DeployDev]
    runs-on: ubuntu-latest
    steps:
    - name: Test application
      run: |
        sleep 20
        curl https://${{secrets.HEROKU_APP_NAME}}-b1e40f16b261.herokuapp.com/